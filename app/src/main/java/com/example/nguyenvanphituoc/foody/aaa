<!---------------------------------------------------------------------------------------------!>
     tabLayout.setupWithViewPager(viewPager);

    private void initialOnTopTab() {
        TypedArray typedArray = res.obtainTypedArray(R.array.MENU_PLACES);
        try {
            for (int i = 0, n = typedArray.length(); i < n; i++) {
                TabLayout.Tab mTab = tabOnTop.newTab();
                tabOnTop.addTab(tabOnTop.newTab().setText(typedArray.getString(i)));
            }
            tabOnTop.setTabGravity(TabLayout.GRAVITY_FILL);
            fragmentAdapter = new FragmentAdapterToolbarOnTop(getSupportFragmentManager(), tabOnTop.getTabCount(), mContext);

            viewPager.setAdapter(fragmentAdapter);
            for(int i = 0, n = tabOnTop.getTabCount(); i < n ;i++){
                TabLayout.Tab tab = tabOnTop.getTabAt(i);
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                    assert tab != null;
                    tab.setCustomView(fragmentAdapter.getTabView(i, tab));
                }
            }
            viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabOnTop));

            tabOnTop.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
                @Override
                public void onTabSelected(TabLayout.Tab LayoutTab) {
                    viewPager.setCurrentItem(LayoutTab.getPosition());
                }

                @Override
                public void onTabUnselected(TabLayout.Tab LayoutTab) {

                }

                @Override
                public void onTabReselected(TabLayout.Tab LayoutTab) {

                }
            });
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            typedArray.recycle();
        }
    }
<!---------------------------------------------------------------------------------------------!>
public class PageFragment extends Fragment {
    public static final String ARG_PAGE = "ARG_PAGE";

    private int mPage;

    public static PageFragment newInstance(int page) {
        Bundle args = new Bundle();
        args.putInt(ARG_PAGE, page);
        PageFragment fragment = new PageFragment();
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mPage = getArguments().getInt(ARG_PAGE);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_page, container, false);
        TextView textView = (TextView) view;
        textView.setText("Fragment #" + mPage);
        return view;
    }
}
public class SampleFragmentPagerAdapter extends FragmentPagerAdapter {
    final int PAGE_COUNT = 3;
    private String tabTitles[] = new String[] { "Tab1", "Tab2", "Tab3" };
    private Context context;

    public SampleFragmentPagerAdapter(FragmentManager fm, Context context) {
        super(fm);
        this.context = context;
    }

    @Override
    public int getCount() {
        return PAGE_COUNT;
    }

    @Override
    public Fragment getItem(int position) {
        return PageFragment.newInstance(position + 1);
    }

    @Override
    public CharSequence getPageTitle(int position) {
        // Generate title based on item position
        return tabTitles[position];
    }
}
<!---------------------------------------------------------------------------------------------!>
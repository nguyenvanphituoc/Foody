<!---------------------------------------------------------------------------------------------!>
     tabLayout.setupWithViewPager(viewPager);
            //Use custom layout
//            for(int i = 0, n = tabOnTop.getTabCount(); i < n ;i++){
//                TabLayout.Tab tab = tabOnTop.getTabAt(i);
//                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
//                    assert tab != null;
//                    tab.setCustomView(fragmentAdapter.getTabView(i, tab));
//                }
//            }
    private void initialOnTopTab() {
        TypedArray typedArray = res.obtainTypedArray(R.array.MENU_PLACES);
        try {
            for (int i = 0, n = typedArray.length(); i < n; i++) {
                TabLayout.Tab mTab = tabOnTop.newTab();
                tabOnTop.addTab(tabOnTop.newTab().setText(typedArray.getString(i)));
            }
            tabOnTop.setTabGravity(TabLayout.GRAVITY_FILL);
            fragmentAdapter = new FragmentAdapterToolbarOnTop(getSupportFragmentManager(), tabOnTop.getTabCount(), mContext);

            viewPager.setAdapter(fragmentAdapter);
            for(int i = 0, n = tabOnTop.getTabCount(); i < n ;i++){
                TabLayout.Tab tab = tabOnTop.getTabAt(i);
                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
                    assert tab != null;
                    tab.setCustomView(fragmentAdapter.getTabView(i, tab));
                }
            }
            viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(tabOnTop));

            tabOnTop.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
                @Override
                public void onTabSelected(TabLayout.Tab LayoutTab) {
                    viewPager.setCurrentItem(LayoutTab.getPosition());
                }

                @Override
                public void onTabUnselected(TabLayout.Tab LayoutTab) {

                }

                @Override
                public void onTabReselected(TabLayout.Tab LayoutTab) {

                }
            });
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            typedArray.recycle();
        }
    }
     private void initialOnTopToolbar(TabLayout mTabLayout,@ArrayRes int resArrayID) {
            TypedArray typedArray = res.obtainTypedArray(resArrayID);
            try {
                for (int i = 0, n = typedArray.length(); i < n; i++) {
                    mTabLayout.addTab(mTabLayout.newTab().setText(typedArray.getString(i)));
                }
                mTabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {
                    @Override
                    public void onTabSelected(TabLayout.Tab LayoutTab) {
                        viewPageMain.setCurrentItem(LayoutTab.getPosition());
                    }

                    @Override
                    public void onTabUnselected(TabLayout.Tab LayoutTab) {

                    }

                    @Override
                    public void onTabReselected(TabLayout.Tab LayoutTab) {

                    }
                });
            } catch (Exception e) {
                e.printStackTrace();
            }
            finally {
                typedArray.recycle();
            }
        }
<!---------------------------------------------------------------------------------------------!>
public class PageFragment extends Fragment {
    public static final String ARG_PAGE = "ARG_PAGE";

    private int mPage;

    public static PageFragment newInstance(int page) {
        Bundle args = new Bundle();
        args.putInt(ARG_PAGE, page);
        PageFragment fragment = new PageFragment();
        fragment.setArguments(args);
        return fragment;
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        mPage = getArguments().getInt(ARG_PAGE);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_page, container, false);
        TextView textView = (TextView) view;
        textView.setText("Fragment #" + mPage);
        return view;
    }
}
public class SampleFragmentPagerAdapter extends FragmentPagerAdapter {
    final int PAGE_COUNT = 3;
    private String tabTitles[] = new String[] { "Tab1", "Tab2", "Tab3" };
    private Context context;

    public SampleFragmentPagerAdapter(FragmentManager fm, Context context) {
        super(fm);
        this.context = context;
    }

    @Override
    public int getCount() {
        return PAGE_COUNT;
    }

    @Override
    public Fragment getItem(int position) {
        return PageFragment.newInstance(position + 1);
    }

    @Override
    public CharSequence getPageTitle(int position) {
        // Generate title based on item position
        return tabTitles[position];
    }
}
<!---------------------------------------------------------------------------------------------!>

        if (position % 2 == 0)
            return mInflater.inflate(R.layout.tab_ontop_food, null);
        else
            return mInflater.inflate(R.layout.tab_ontop_places, null);

         TextView tv = new TextView(myContext);
                tv.setText(tab.getText());
                if (position % 2 == 0)
                    tv.setBackgroundResource(R.drawable.buttonleft_menu_style);
                else
                    tv.setBackgroundResource(R.drawable.buttonright_menu_style);
                tv.setTextColor(myContext.getResources().getColorStateList(+R.drawable.button_menu_colorstyle, null));
                return tv;
<!--------------------------------------------------------------------------------!>
<TabHost
        xmlns:android="http://schemas.android.com/apk/res/android"
        android:id="@android:id/tabhost"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_below="@id/ontopTab"
        android:layout_above="@id/onbottomToolbar">

        <LinearLayout
            android:orientation="vertical"
            android:layout_width="match_parent"
            android:layout_height="match_parent">

            <TabWidget
                android:id="@android:id/tabs"

                android:orientation="horizontal"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_weight="0"/>

            <FrameLayout
                android:id="@android:id/tabcontent"
                android:layout_width="0dp"
                android:layout_height="0dp"
                android:layout_weight="0"/>

            <FrameLayout
                android:id="@+id/realtabcontent"
                android:layout_width="match_parent"
                android:layout_height="0dp"
                android:layout_weight="1"/>

        </LinearLayout>
    </TabHost>
 -----------------------------------------------------------------------------------------------------
 public static FoodyHomePageFragment newInstance(String[] sendData) {
         FoodyHomePageFragment fragment = new FoodyHomePageFragment();

         final Bundle args = new Bundle(1);
         args.putStringArray("sendData", sendData);
         fragment.setArguments(args);
         return fragment;
     }
---------------------------------------------------------------------------------------------------------

        textView.setBackground(mContext.getResources().getDrawable(R.drawable.buttonleft_menu_style, null));
        textView.setPadding(5, 3, 3, 5);
        textView.setHeight(32);
        textView.setBackgroundColor(mContext.getResources().getColor(+R.drawable.buttonleft_menu_style, null));
        textView.setGravity(0x00000001 | 0x00000011);
        textView.setText(mTab.getText());
--------------------------------------------------------------------------------------------------------------